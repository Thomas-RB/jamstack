{"version":3,"file":"lazy-hydrate-b7e4806a.js","sources":["../src/components/layout-wrapper.tsx","../src/components/picture.tsx","../src/components/placeholder.tsx","../src/components/main-image.tsx","../src/components/lazy-hydrate.tsx"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> = function LayoutWrapper({\n  layout,\n  width,\n  height,\n  children,\n}) {\n  let sizer: JSX.Element | null = null\n  if (layout === `fluid`) {\n    sizer = (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    sizer = (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return (\n    <Fragment>\n      {sizer}\n      {children}\n\n      {\n        // eslint-disable-next-line no-undef\n        SERVER && <NativeScriptLoading />\n      }\n    </Fragment>\n  )\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const fallbackImage = (\n      <Image {...props} {...fallback} shouldLoad={shouldLoad} innerRef={ref} />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={srcSet}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<{}> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> = function Placeholder({\n  fallback,\n  ...props\n}) {\n  if (fallback) {\n    return (\n      <Picture\n        {...props}\n        fallback={{\n          src: fallback,\n        }}\n        aria-hidden\n        alt=\"\"\n      />\n    )\n  } else {\n    return <div {...props}></div>\n  }\n}\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage({ ...props }, ref) {\n    return (\n      <>\n        {props.loading === `eager` && (\n          <link\n            rel=\"preload\"\n            as=\"image\"\n            href={props.fallback.src}\n            // TODO: remove this if imagesrcset is added to the types\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            imagesrcset={props.fallback.srcSet}\n            imagesizes={props.fallback.sizes}\n          />\n        )}\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, { MutableRefObject } from \"react\"\nimport { hydrate, render } from \"react-dom\"\nimport { GatsbyImageProps } from \"./gatsby-image.browser\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImageProps, MainImage } from \"./main-image\"\nimport {\n  getMainProps,\n  getPlaceholderProps,\n  hasNativeLazyLoadSupport,\n  hasImageLoaded,\n} from \"./hooks\"\nimport { ReactElement } from \"react\"\n\ntype LazyHydrateProps = Omit<GatsbyImageProps, \"as\" | \"style\" | \"className\"> & {\n  isLoading: boolean\n  isLoaded: boolean // alwaystype SetStateAction<S> = S | ((prevState: S) => S);\n  toggleIsLoaded: Function\n  ref: MutableRefObject<HTMLImageElement | undefined>\n}\n\nexport function lazyHydrate(\n  {\n    image,\n    loading,\n    isLoading,\n    isLoaded,\n    toggleIsLoaded,\n    ref,\n    imgClassName,\n    imgStyle = {},\n    objectPosition,\n    backgroundColor,\n    objectFit = `cover`,\n    ...props\n  }: LazyHydrateProps,\n  root: MutableRefObject<HTMLElement | undefined>,\n  hydrated: MutableRefObject<boolean>\n): (() => void) | null {\n  const {\n    width,\n    height,\n    layout,\n    images,\n    placeholder,\n    backgroundColor: wrapperBackgroundColor,\n  } = image\n\n  if (!root.current) {\n    return null\n  }\n\n  const hasSSRHtml = root.current.querySelector(`[data-gatsby-image-ssr]`)\n  // On first server hydration do nothing\n  if (hasNativeLazyLoadSupport() && hasSSRHtml && !hydrated.current) {\n    return null\n  }\n\n  const cacheKey = JSON.stringify(images)\n  const hasLoaded = !hydrated.current && hasImageLoaded(cacheKey)\n\n  imgStyle = {\n    objectFit,\n    objectPosition,\n    backgroundColor,\n    ...imgStyle,\n  }\n\n  const component = (\n    <LayoutWrapper layout={layout} width={width} height={height}>\n      {!hasLoaded && (\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            isLoaded,\n            layout,\n            width,\n            height,\n            wrapperBackgroundColor\n          )}\n        />\n      )}\n      <MainImage\n        {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n        className={imgClassName}\n        {...getMainProps(\n          isLoading,\n          hasLoaded || isLoaded,\n          images,\n          loading,\n          toggleIsLoaded,\n          cacheKey,\n          ref,\n          imgStyle\n        )}\n      />\n    </LayoutWrapper>\n  )\n\n  const doRender = hydrated.current ? render : hydrate\n  doRender(component, root.current)\n  hydrated.current = true\n\n  return (): void => {\n    if (root.current) {\n      render((null as unknown) as ReactElement, root.current)\n    }\n  }\n}\n"],"names":["LayoutWrapper","layout","width","height","children","sizer","React","style","paddingTop","maxWidth","display","alt","role","src","position","Fragment","Image","srcSet","loading","shouldLoad","innerRef","props","decoding","undefined","ref","Picture","forwardRef","fallback","sources","fallbackImage","length","map","media","type","key","propTypes","PropTypes","isRequired","sizes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","rel","as","href","imagesrcset","imagesizes","lazyHydrate","root","hydrated","image","isLoading","isLoaded","toggleIsLoaded","imgClassName","imgStyle","objectPosition","backgroundColor","objectFit","images","placeholder","wrapperBackgroundColor","current","hasSSRHtml","querySelector","hasNativeLazyLoadSupport","cacheKey","JSON","stringify","hasLoaded","hasImageLoaded","component","getPlaceholderProps","className","getMainProps","render","hydrate"],"mappings":"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"}