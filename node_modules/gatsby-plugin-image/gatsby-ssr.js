var React = require('react');
var commonTags = require('common-tags');

var generateHtml = function generateHtml(str) {
  return {
    __html: commonTags.oneLine(str)
  };
};

function onRenderBody(_ref) {
  var setHeadComponents = _ref.setHeadComponents;
  setHeadComponents([React.createElement("style", {
    key: "gatsby-image-style",
    dangerouslySetInnerHTML: generateHtml(".gatsby-image-wrapper img{all:inherit;bottom:0;height:100%;left:0;margin:0;max-width:none;padding:0;position:absolute;right:0;top:0;width:100%;object-fit:cover}.gatsby-image-wrapper [data-main-image]{opacity:0;transform:translateZ(0);transition:opacity .25s linear;will-change:opacity}")
  }), React.createElement("noscript", {
    key: "gatsby-image-style-noscript",
    dangerouslySetInnerHTML: generateHtml("<style>" + ".gatsby-image-wrapper noscript [data-main-image]{opacity:1!important}.gatsby-image-wrapper [data-placeholder-image]{opacity:0!important}" + "</style>")
  }), React.createElement("script", {
    key: "gatsby-image-style-script",
    type: "module",
    dangerouslySetInnerHTML: generateHtml("const e=\"undefined\"!=typeof HTMLImageElement&&\"loading\"in HTMLImageElement.prototype;e&&document.body.addEventListener(\"load\",(function e(t){if(void 0===t.target.dataset.mainImage)return;if(void 0===t.target.dataset.gatsbyImageSsr)return void document.body.removeEventListener(\"load\",e,!0);const a=t.target;let n=null,o=a;for(;null===n&&o;)void 0!==o.parentNode.dataset.gatsbyImageWrapper&&(n=o.parentNode),o=o.parentNode;const r=n.querySelector(\"[data-placeholder-image]\"),d=new Image;d.src=a.currentSrc,d.decode().catch((()=>{})).then((()=>{a.style.opacity=1,r&&(r.style.opacity=0,r.style.transition=\"opacity 500ms linear\")}))}),!0);")
  })]);
}

exports.onRenderBody = onRenderBody;
